diff --git a/app/controllers/almacen_controller.rb b/app/controllers/almacen_controller.rb
index 717e02c..df31f75 100644
--- a/app/controllers/almacen_controller.rb
+++ b/app/controllers/almacen_controller.rb
@@ -6,9 +6,13 @@ class AlmacenController < ApplicationController
 		@almacenes = Request.getAlmacenesAll
 		@orden = Orden.all
 		@factura = Factura.all
+<<<<<<< HEAD
+		#Compra.enviar_orden("26",101,7,DateTime.current + 1.days)
+=======
 		puts "SE LLAMO CREAR BOLETA 1"
 		Boletum.crearBoleta("38", 2, "mi casa",  (1513*1.19*2).ceil)
 		puts "SE LLAMO CREAR BOLETA"
+>>>>>>> 920e1f853c4c0904939e91e8629a7699ef452a13
 		#Ftp.procesarFtps(Ftp.getFtps)
 		#Compra.consultar_materia_prima("26")
 		#oc_id = "57145e4cf77d320300f0deb9"
diff --git a/app/controllers/spree/checkout_controller_decorator.rb b/app/controllers/spree/checkout_controller_decorator.rb
index ce91411..f8d11b5 100644
--- a/app/controllers/spree/checkout_controller_decorator.rb
+++ b/app/controllers/spree/checkout_controller_decorator.rb
@@ -1,19 +1,13 @@
 module Spree
 
   CheckoutController.class_eval do
-    before_filter :use_port_80 if Rails.env != 'development'
-    def use_port_80
-        class << request
-            def port; 80; end
-        end
-    end
     #Modificamos este mÃ©todo de spree para validar Stock contra sistema bodega
     def ensure_sufficient_stock_lines
       product = @order.line_items
       sku = product[0].sku
       stock = Controlador.getStock(sku)
       cantidad_requerida = product[0].quantity.to_i
-      if cantidad_requerida < stock
+      if cantidad_requerida > stock
         flash[:error] = Spree.t(:inventory_error_flash_for_insufficient_quantity)
         redirect_to spree.cart_path
       end
@@ -37,7 +31,7 @@ module Spree
           monto = product.price.to_i * cantidad_requerida
           direccion = @order.bill_address.address1
           url = Boletum.crearBoleta(sku, cantidad_requerida, direccion, monto)
-          redirect_to url, port: 80
+          redirect_to url
           #@current_order = nil
           flash.notice = Spree.t(:order_processed_successfully)
           flash['order_completed'] = true
diff --git a/app/controllers/spree/home_controller_decorator.rb b/app/controllers/spree/home_controller_decorator.rb
index 4256d33..ee808bb 100644
--- a/app/controllers/spree/home_controller_decorator.rb
+++ b/app/controllers/spree/home_controller_decorator.rb
@@ -1,12 +1,8 @@
 module Spree
   HomeController.class_eval do
-    def inicio
-      puts "INICIOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO"
-      @products = Product.all
-      puts "SE LLAMO CREAR BOLETA 1"
-		  crearBoleta(38, 2, "mi casa",  1.513*1.19*2)
-    end
 
+
+    
     def exito
       
           boleta=Boletum.last
@@ -14,10 +10,7 @@ module Spree
           Thread.new do
             @despachados = Almacen.moverBodegaWEB(boleta.cantidad, boleta.sku, boleta)
           end
-          #puts "CANTIDAD DESPACHADA ->" + despachados
-          @total=boleta.monto
-          @bruto=@total*1/1.19
-          @iva=@total-@bruto
+
           
     end
     
diff --git a/app/models/boletum.rb b/app/models/boletum.rb
index fca5f07..f993735 100644
--- a/app/models/boletum.rb
+++ b/app/models/boletum.rb
@@ -1,6 +1,7 @@
 class Boletum < ActiveRecord::Base
     
-    def self.crearBoleta(sku, cantidad, direccion, monto)    
+    def self.crearBoleta(sku, cantidad, direccion, monto)
+        monto = monto*1.19
         boleta=Request.crear_boleta(Factura.getIdPropio, direccion, monto)
         boletafinal = Boletum.new(proveedor: Factura.getIdPropio, direccion: direccion, monto: monto.to_i, idboleta: boleta['_id'], cantidad: cantidad.to_i, sku: sku) 
         boletafinal.save
@@ -11,10 +12,9 @@ class Boletum < ActiveRecord::Base
 
     def self.getUrl(boletaId)
         if Rails.env == 'development'
-            url = "http://integracion-2016-dev.herokuapp.com/web/pagoenlinea?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2Fexito&cancelUrl=http%3A%2F%2Fwww.emol.com&boletaId="+boletaId
+            url = "http://integracion-2016-dev.herokuapp.com/web/pagoenlinea?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2Fexito&cancelUrl=http%3A%2F%2Flocalhost%3A3000%2Ffalla&boletaId="+boletaId
         else
-            #RECORDAR CAMBIARLO A PROD
-            url = "http://integracion-2016-prod.herokuapp.com/web/pagoenlinea?callbackUrl=http%3A%2F%2Fintegra4.ing.puc.cl%2Fexito&cancelUrl=http%3A%2F%2Fwww.emol.com&boletaId="+boletaId
+            url = "http://integracion-2016-prod.herokuapp.com/web/pagoenlinea?callbackUrl=http%3A%2F%2Fintegra4.ing.puc.cl%2Fexito&cancelUrl=http%3A%2F%2Fintegra4.ing.puc.cl%2Ffalla&boletaId="+boletaId
         end
         url
     end
diff --git a/app/models/compra.rb b/app/models/compra.rb
index 9a6457a..23b1615 100644
--- a/app/models/compra.rb
+++ b/app/models/compra.rb
@@ -13,16 +13,32 @@ class Compra < ActiveRecord::Base
 		when "4" # sku_aceite_maravilla
 			url = 'http://integra11.ing.puc.cl/api/consultar/' + sku.to_s
 		end
+		puts "URL -> " +url
 		respuesta = Request.consultarStock(url)
-		stock = respuesta["stock"]
+		stock = respuesta['stock']
+		puts "STOCK -> "+stock.inspect
+		stock
 	end
 
 	def self.consultar_productos_procesados(sku)
 	
 	end
 
-	def self.comprar_materia_prima(sku,cantidad_requerida,grupo_proveedor)
-
+	def self.enviar_orden(sku,cantidad_requerida,grupo_proveedor,fecha_entrega)
+		puts "CANTIDAD REQUERIDA ->"+cantidad_requerida.to_s+" | "+"STOCK -> "+  consultar_materia_prima(sku).to_s
+		if cantidad_requerida<=consultar_materia_prima(sku).to_i
+	#		puts "HAY STOCK PARA COMPRAR"
+	#		#FALTA FECHA ENTREGA
+	#		orden=Request.create_orden(b2b, cantidad_requerida, sku, Orden.getIdPropio , grupo_proveedor, Controlador.getPrecio(sku)+1, fecha_entrega, notas)
+	#		puts "ORDEN -> " + orden.inspect
+	#		respuesta=Request.enviarOC(grupo_proveedor, orden._id).parsed_response
+	#		puts "RESPUESTA -> " + respuesta.inspect
+	#		if respuesta['aceptado']==true
+	#			Orden.saveOc(orden)
+	#			cambiarEstado(orden._id, "aceptado")
+	#			
+	#		end
+		end
 	end
 	
 	def self.compra_productos_procesados(sku, cantidad_requerida, grupo_proveedor)
diff --git a/app/models/request.rb b/app/models/request.rb
index 8a21796..f4a240b 100644
--- a/app/models/request.rb
+++ b/app/models/request.rb
@@ -97,6 +97,7 @@ class Request < ActiveRecord::Base
 		puts "hash -> " + hash.to_s
 		body = { canal: canal, cantidad: cantidad, sku: sku, cliente: cliente, proveedor: proveedor, precioUnitario: precio_unitario, fechaEntrega: date_to_millis(fecha_entrega), notas: notas }.to_json
 		orden = HTTParty.put(ruta, :body => body, :headers => hash)
+		Orden.toObject(orden.parsed_response) #modificado post entrega 1
 	end
 
 	def self.date_to_millis(fecha)
@@ -240,6 +241,23 @@ class Request < ActiveRecord::Base
 
 #-----------------------API-B2B-------------------------#
 
+	def self.enviarOC(numero_grupo, id_oc)
+		url ="a"
+		case numero_grupo
+		
+		when "8" #recibir
+			url = 'http://integra8.ing.puc.cl/api/oc/recibir/' + id_oc
+		when "2" # recibir
+			url = 'http://integra2.ing.puc.cl/api/oc/recibir/' + id_oc
+		when "7" # srecibir
+			url = 'http://integra7.ing.puc.cl/api/oc/recibir/' + id_oc
+		when "11" # sku_aceite_recibir
+			url = 'http://integra11.ing.puc.cl/api/oc/recibir/' + id_oc
+		end
+		ruta = URI.parse(url)
+		respuesta = HTTParty.get(url).parsed_response
+	end
+	
 	def self.enviarFactura(ruta, idfactura)
         ruta = URI.parse(ruta)
 		respuesta = HTTParty.get(ruta)
@@ -258,7 +276,7 @@ class Request < ActiveRecord::Base
 	  	ruta = URI.parse(url)
 	  	respuesta = HTTParty.get(ruta)
 	  	puts "Respuesta a Stock: " + respuesta.inspect
-	  	respuesta.parsed_response
+	  	respuesta
 	end
 
 
diff --git a/db/schema.rb b/db/schema.rb
index 48b2862..9976284 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -13,6 +13,7 @@
 
 ActiveRecord::Schema.define(version: 20160527203150) do
 
+
   create_table "abastecers", force: :cascade do |t|
     t.datetime "created_at", null: false
     t.datetime "updated_at", null: false
